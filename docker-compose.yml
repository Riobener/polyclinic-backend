version: "3"

services:

 medic-db:
  image: 'postgres:latest'
  container_name: medic-db
  ports:
    - 5435:5432
  environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=medic
  healthcheck:
    test: ["CMD-SHELL", "pg_isready", "-d", "medic"]
    interval: 10s
    timeout: 5s
    retries: 5
    start_period: 10s


 medic-service:
    build:
      context: /medic-service
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5435/medic
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://host.docker.internal:8083/medic/health" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s
    depends_on:
      medic-db:
        condition: service_healthy
    links:
      - medic-db

 patient-db:
    image: 'postgres:latest'
    container_name: patient-db
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=patient
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "patient"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


 pacient-service:
    build:
      context: /pacient-service
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5434/patient
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://host.docker.internal:8082/patient/health" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s
    depends_on:
      patient-db:
        condition: service_healthy
    links:
      - patient-db


 application-db:
    image: 'postgres:latest'
    container_name: application-db
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=application
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "application"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s


 application-service:
    build:
      context: /application-service
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5433/application
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://host.docker.internal:8081/applications/health" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s
    depends_on:
      application-db:
        condition: service_healthy
    links:
      - application-db

 krakend_ce:
    build:
      context: ../polyclinic-backend/
      dockerfile: Dockerfile
    image: devopsfaith/krakend:2.1.3
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
      - "8091:8091"
    depends_on:
      application-service:
        condition: service_started
    links:
      - application-service

 jaeger-allinone:
    image: jaegertracing/all-in-one:latest
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
      - 16685:16685
      - 14268:14268
      - 5775:5775/udp
      - 5778:5778
      - 14250:14250
      - 9411:9411
    depends_on:
      krakend_ce:
        condition: service_started
    links:
      - krakend_ce

 influxdb:
    image: influxdb:1.8.10
    environment:
      - "INFLUXDB_DB=krakend"
      - "INFLUXDB_USER=kraken"
      - "INFLUXDB_USER_PASSWORD=pass"
      - "INFLUXDB_ADMIN_USER=admin"
      - "INFLUXDB_ADMIN_PASSWORD=admin"
    ports:
      - "8086:8086"

 keycloak-db:
    image: 'postgres:latest'
    container_name: keycloak-db
    ports:
      - 5438:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
    networks:
      - local-keycloak

 keycloak:
    depends_on:
      - keycloak-db
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin1
      KEYCLOAK_PASSWORD: admin1
    image: jboss/keycloak
    ports:
      - "8484:8080"
    networks:
      - local-keycloak


networks:
  monitoring:
  local-keycloak: