{
  "$schema": "https://www.krakend.io/schema/v3.json",
  "version": 3,
  "name": "KrakenD - API Gateway",
  "timeout": "3000ms",
  "cache_ttl": "300s",
  "output_encoding": "no-op",
  "port": 8080,
  "sequential_start": false,
  "endpoints": [
    {
      "endpoint": "/kraken/medic/find/all",
      "method": "GET",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/medic/find/all",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://host.docker.internal:8083"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/medic/find/full/byId/{id}",
      "method": "GET",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["medic"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/medic/find/full/byId/{id}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://host.docker.internal:8083"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/medic/save/all",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["medic"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/medic/save/all",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8083"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/payment/markPaid",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/medic/payment/markPaid",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8085"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/applications/",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/applications/",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8081"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/auth/",
      "method": "POST",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/auth/realms/master/protocol/openid-connect/token",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8484"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/kraken/patient/export/{id}",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/patient/export/{id}",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8082"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/patient/update",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/patient/update",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8082"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },{
      "endpoint": "/kraken/patient/save/all",
      "method": "POST",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/patient/save/all",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://host.docker.internal:8082"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    },
    {
      "endpoint": "/kraken/patient/find/byId/{id}",
      "method": "GET",
      "output_encoding": "no-op",
      "input_headers": [
        "User",
        "roles"
      ],
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://host.docker.internal:8484/auth/realms/master/protocol/openid-connect/certs",
          "roles_key_is_nested": true,
          "roles_key": "realm_access.roles",
          "roles": ["patient"],
          "disable_jwk_security": true,
          "propagate_claims": [
            ["realm_access", "roles"],
            ["sub", "User"]
          ]
        }
      },
      "backend": [
        {
          "url_pattern": "/patient/find/byId/{id}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://host.docker.internal:8082"
          ],
          "disable_host_sanitize": false,
          "extra_config": {
            "modifier/martian": {
              "header.Modifier": {
                "scope": ["request", "response"],
                "name": "Content-Type",
                "value": "application/json"
              }
            }
          }
        }
      ]
    }
  ],
  "extra_config":{
    "telemetry/metrics": {
      "collection_time": "30s",
      "listen_address": ":8090"
    },
    "telemetry/influx": {
      "address": "http://host.docker.internal:8086",
      "ttl": "25s",
      "buffer_size": 100,
      "username": "kraken",
      "password": "pass"
    },
    "telemetry/opencensus": {
      "sample_rate": 100,
      "reporting_period": 0,
      "exporters": {
        "prometheus": {
          "port": 8091,
          "namespace": "krakend",
          "tag_host": false,
          "tag_path": true,
          "tag_method": true,
          "tag_statuscode": false
        },
        "jaeger": {
          "endpoint": "http://host.docker.internal:14268/api/traces",
          "service_name":"krakend",
          "buffer_max_count": 1000
        }
      }
    }
  }
}
